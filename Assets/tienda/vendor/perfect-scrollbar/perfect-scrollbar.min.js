/*
 perfect-scrollbar v1.5.3
 Copyright 2021 Hyunje Jun, MDBootstrap and Contributors
 Licensed under MIT
 */
(function(g, m){"object" === typeof exports && "undefined" !== typeof module?module.exports = m():"function" === typeof define && define.amd?define(m):(g = g || self, g.PerfectScrollbar = m())})(this, function(){function g(a, b){for (var d in b){var c = b[d]; "number" === typeof c && (c += "px"); a.style[d] = c}return a}function m(a){var b = document.createElement("div"); b.className = a; return b}function n(a, b){if (!y)throw Error("No element matching method supported"); return y.call(a, b)}function t(a){a.remove?a.remove():a.parentNode &&
        a.parentNode.removeChild(a)}function z(a, b){return Array.prototype.filter.call(a.children, function(a){return n(a, b)})}function A(a, b){a = a.element.classList; var d = k.state.scrolling(b); a.contains(d)?clearTimeout(B[b]):a.add(d)}function C(a, b){B[b] = setTimeout(function(){return a.isAlive && a.element.classList.remove(k.state.scrolling(b))}, a.settings.scrollingThreshold)}function w(a){if ("function" === typeof window.CustomEvent)return new CustomEvent(a); var b = document.createEvent("CustomEvent"); b.initCustomEvent(a,
        !1, !1, void 0); return b}function x(a, b, d, c, f){void 0 === c && (c = !0); void 0 === f && (f = !1); if ("top" === b)b = "contentHeight containerHeight scrollTop y up down".split(" "); else if ("left" === b)b = "contentWidth containerWidth scrollLeft x left right".split(" "); else throw Error("A proper axis should be provided"); var l = b[0], M = b[1], h = b[2], e = b[3], k = b[4]; b = b[5]; void 0 === c && (c = !0); void 0 === f && (f = !1); var g = a.element; a.reach[e] = null; 1 > g[h] && (a.reach[e] = "start"); g[h] > a[l] - a[M] - 1 && (a.reach[e] = "end"); d && (g.dispatchEvent(w("ps-scroll-" +
        e)), 0 > d?g.dispatchEvent(w("ps-scroll-" + k)):0 < d && g.dispatchEvent(w("ps-scroll-" + b)), c && (A(a, e), C(a, e))); a.reach[e] && (d || f) && g.dispatchEvent(w("ps-" + e + "-reach-" + a.reach[e]))}function e(a){return parseInt(a, 10) || 0}function O(a){a = getComputedStyle(a); return e(a.width) + e(a.paddingLeft) + e(a.paddingRight) + e(a.borderLeftWidth) + e(a.borderRightWidth)}function r(a){var b = a.element, d = Math.floor(b.scrollTop), c = b.getBoundingClientRect(); a.containerWidth = Math.round(c.width); a.containerHeight = Math.round(c.height);
        a.contentWidth = b.scrollWidth; a.contentHeight = b.scrollHeight; b.contains(a.scrollbarXRail) || (z(b, k.element.rail("x")).forEach(function(a){return t(a)}), b.appendChild(a.scrollbarXRail)); b.contains(a.scrollbarYRail) || (z(b, k.element.rail("y")).forEach(function(a){return t(a)}), b.appendChild(a.scrollbarYRail)); !a.settings.suppressScrollX && a.containerWidth + a.settings.scrollXMarginOffset < a.contentWidth?(a.scrollbarXActive = !0, a.railXWidth = a.containerWidth - a.railXMarginWidth, a.railXRatio = a.containerWidth / a.railXWidth,
        a.scrollbarXWidth = D(a, e(a.railXWidth * a.containerWidth / a.contentWidth)), a.scrollbarXLeft = e((a.negativeScrollAdjustment + b.scrollLeft) * (a.railXWidth - a.scrollbarXWidth) / (a.contentWidth - a.containerWidth))):a.scrollbarXActive = !1; !a.settings.suppressScrollY && a.containerHeight + a.settings.scrollYMarginOffset < a.contentHeight?(a.scrollbarYActive = !0, a.railYHeight = a.containerHeight - a.railYMarginHeight, a.railYRatio = a.containerHeight / a.railYHeight, a.scrollbarYHeight = D(a, e(a.railYHeight * a.containerHeight / a.contentHeight)),
        a.scrollbarYTop = e(d * (a.railYHeight - a.scrollbarYHeight) / (a.contentHeight - a.containerHeight))):a.scrollbarYActive = !1; a.scrollbarXLeft >= a.railXWidth - a.scrollbarXWidth && (a.scrollbarXLeft = a.railXWidth - a.scrollbarXWidth); a.scrollbarYTop >= a.railYHeight - a.scrollbarYHeight && (a.scrollbarYTop = a.railYHeight - a.scrollbarYHeight); P(b, a); a.scrollbarXActive?b.classList.add(k.state.active("x")):(b.classList.remove(k.state.active("x")), a.scrollbarXWidth = 0, a.scrollbarXLeft = 0, b.scrollLeft = !0 === a.isRtl?a.contentWidth:
        0); a.scrollbarYActive?b.classList.add(k.state.active("y")):(b.classList.remove(k.state.active("y")), a.scrollbarYHeight = 0, a.scrollbarYTop = 0, b.scrollTop = 0)}function D(a, b){a.settings.minScrollbarLength && (b = Math.max(b, a.settings.minScrollbarLength)); a.settings.maxScrollbarLength && (b = Math.min(b, a.settings.maxScrollbarLength)); return b}function P(a, b){var d = {width:b.railXWidth}, c = Math.floor(a.scrollTop); d.left = b.isRtl?b.negativeScrollAdjustment + a.scrollLeft + b.containerWidth - b.contentWidth:a.scrollLeft;
        b.isScrollbarXUsingBottom?d.bottom = b.scrollbarXBottom - c:d.top = b.scrollbarXTop + c; g(b.scrollbarXRail, d); d = {top:c, height:b.railYHeight}; b.isScrollbarYUsingRight?d.right = b.isRtl?b.contentWidth - (b.negativeScrollAdjustment + a.scrollLeft) - b.scrollbarYRight - b.scrollbarYOuterWidth - 9:b.scrollbarYRight - a.scrollLeft:d.left = b.isRtl?b.negativeScrollAdjustment + a.scrollLeft + 2 * b.containerWidth - b.contentWidth - b.scrollbarYLeft - b.scrollbarYOuterWidth:b.scrollbarYLeft + a.scrollLeft; g(b.scrollbarYRail, d); g(b.scrollbarX,
        {left:b.scrollbarXLeft, width:b.scrollbarXWidth - b.railBorderXWidth}); g(b.scrollbarY, {top:b.scrollbarYTop, height:b.scrollbarYHeight - b.railBorderYWidth})}function E(a, b){function d(b){b.touches && b.touches[0] && (b[h] = b.touches[0].pageY); F[p] = G + n * (b[h] - H); A(a, I); r(a); b.stopPropagation(); b.type.startsWith("touch") && 1 < b.changedTouches.length && b.preventDefault()}function c(){C(a, I); a[J].classList.remove(k.state.clicking); a.event.unbind(a.ownerDocument, "mousemove", d)}function f(b, f){G = F[p]; f && b.touches && (b[h] =
        b.touches[0].pageY); H = b[h]; n = (a[e] - a[l]) / (a[g] - a[N]); f?a.event.bind(a.ownerDocument, "touchmove", d):(a.event.bind(a.ownerDocument, "mousemove", d), a.event.once(a.ownerDocument, "mouseup", c), b.preventDefault()); a[J].classList.add(k.state.clicking); b.stopPropagation()}var l = b[0], e = b[1], h = b[2], g = b[3], m = b[4], N = b[5], p = b[6], I = b[7], J = b[8], F = a.element, G = null, H = null, n = null; a.event.bind(a[m], "mousedown", function(a){f(a)}); a.event.bind(a[m], "touchstart", function(a){f(a, !0)})}var y = "undefined" !== typeof Element &&
        (Element.prototype.matches || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector), k = {main:"ps", rtl:"ps__rtl", element:{thumb:function(a){return"ps__thumb-" + a}, rail:function(a){return"ps__rail-" + a}, consuming:"ps__child--consume"}, state:{focus:"ps--focus", clicking:"ps--clicking", active:function(a){return"ps--active-" + a}, scrolling:function(a){return"ps--scrolling-" + a}}}, B = {x:null, y:null}, v = function(a){this.element = a; this.handlers = {}}, q = {isEmpty:{configurable:!0}};
        v.prototype.bind = function(a, b){"undefined" === typeof this.handlers[a] && (this.handlers[a] = []); this.handlers[a].push(b); this.element.addEventListener(a, b, {passive:!0})}; v.prototype.unbind = function(a, b){var d = this; this.handlers[a] = this.handlers[a].filter(function(c){if (b && c !== b)return!0; d.element.removeEventListener(a, c, {passive:!0}); return!1})}; v.prototype.unbindAll = function(){for (var a in this.handlers)this.unbind(a)}; q.isEmpty.get = function(){var a = this; return Object.keys(this.handlers).every(function(b){return 0 ===
        a.handlers[b].length})}; Object.defineProperties(v.prototype, q); var u = function(){this.eventElements = []}; u.prototype.eventElement = function(a){var b = this.eventElements.filter(function(b){return b.element === a})[0]; b || (b = new v(a), this.eventElements.push(b)); return b}; u.prototype.bind = function(a, b, d){this.eventElement(a).bind(b, d)}; u.prototype.unbind = function(a, b, d){a = this.eventElement(a); a.unbind(b, d); a.isEmpty && this.eventElements.splice(this.eventElements.indexOf(a), 1)}; u.prototype.unbindAll = function(){this.eventElements.forEach(function(a){return a.unbindAll()});
        this.eventElements = []}; u.prototype.once = function(a, b, d){var c = this.eventElement(a), f = function(a){c.unbind(b, f); d(a)}; c.bind(b, f)}; var Q = "undefined" !== typeof document && "WebkitAppearance"in document.documentElement.style, K = "undefined" !== typeof window && ("ontouchstart"in window || "maxTouchPoints"in window.navigator && 0 < window.navigator.maxTouchPoints || window.DocumentTouch && document instanceof window.DocumentTouch), L = "undefined" !== typeof navigator && navigator.msMaxTouchPoints, R = "undefined" !== typeof navigator &&
        /Chrome/i.test(navigator && navigator.userAgent), S = {"click-rail":function(a){a.event.bind(a.scrollbarY, "mousedown", function(a){return a.stopPropagation()}); a.event.bind(a.scrollbarYRail, "mousedown", function(b){var d = b.pageY - window.pageYOffset - a.scrollbarYRail.getBoundingClientRect().top > a.scrollbarYTop?1: - 1; a.element.scrollTop += d * a.containerHeight; r(a); b.stopPropagation()}); a.event.bind(a.scrollbarX, "mousedown", function(a){return a.stopPropagation()}); a.event.bind(a.scrollbarXRail, "mousedown", function(b){var d =
        b.pageX - window.pageXOffset - a.scrollbarXRail.getBoundingClientRect().left > a.scrollbarXLeft?1: - 1; a.element.scrollLeft += d * a.containerWidth; r(a); b.stopPropagation()})}, "drag-thumb":function(a){E(a, "containerWidth contentWidth pageX railXWidth scrollbarX scrollbarXWidth scrollLeft x scrollbarXRail".split(" ")); E(a, "containerHeight contentHeight pageY railYHeight scrollbarY scrollbarYHeight scrollTop y scrollbarYRail".split(" "))}, keyboard:function(a){function b(b, f){var c = Math.floor(d.scrollTop); if (0 ===
        b){if (!a.scrollbarYActive)return!1; if (0 === c && 0 < f || c >= a.contentHeight - a.containerHeight && 0 > f)return!a.settings.wheelPropagation}c = d.scrollLeft; if (0 === f){if (!a.scrollbarXActive)return!1; if (0 === c && 0 > b || c >= a.contentWidth - a.containerWidth && 0 < b)return!a.settings.wheelPropagation}return!0}var d = a.element; a.event.bind(a.ownerDocument, "keydown", function(c){if (!(c.isDefaultPrevented && c.isDefaultPrevented() || c.defaultPrevented) && (n(d, ":hover") || n(a.scrollbarX, ":focus") || n(a.scrollbarY, ":focus"))){var f = document.activeElement?
        document.activeElement:a.ownerDocument.activeElement; if (f){if ("IFRAME" === f.tagName)f = f.contentDocument.activeElement; else for (; f.shadowRoot; )f = f.shadowRoot.activeElement; if (n(f, "input,[contenteditable]") || n(f, "select,[contenteditable]") || n(f, "textarea,[contenteditable]") || n(f, "button,[contenteditable]"))return}var l = f = 0; switch (c.which){case 37:f = c.metaKey? - a.contentWidth:c.altKey? - a.containerWidth: - 30; break; case 38:l = c.metaKey?a.contentHeight:c.altKey?a.containerHeight:30; break; case 39:f = c.metaKey?
        a.contentWidth:c.altKey?a.containerWidth:30; break; case 40:l = c.metaKey? - a.contentHeight:c.altKey? - a.containerHeight: - 30; break; case 32:l = c.shiftKey?a.containerHeight: - a.containerHeight; break; case 33:l = a.containerHeight; break; case 34:l = - a.containerHeight; break; case 36:l = a.contentHeight; break; case 35:l = - a.contentHeight; break; default:return}a.settings.suppressScrollX && 0 !== f || a.settings.suppressScrollY && 0 !== l || (d.scrollTop -= l, d.scrollLeft += f, r(a), b(f, l) && c.preventDefault())}})}, wheel:function(a){function b(a,
        b, d){if (!Q && c.querySelector("select:focus"))return!0; if (!c.contains(a))return!1; for (; a && a !== c; ){if (a.classList.contains(k.element.consuming))return!0; var f = getComputedStyle(a); if (d && f.overflowY.match(/(scroll|auto)/)){var l = a.scrollHeight - a.clientHeight; if (0 < l && (0 < a.scrollTop && 0 > d || a.scrollTop < l && 0 < d))return!0}if (b && f.overflowX.match(/(scroll|auto)/) && (f = a.scrollWidth - a.clientWidth, 0 < f && (0 < a.scrollLeft && 0 > b || a.scrollLeft < f && 0 < b)))return!0; a = a.parentNode}return!1}function d(f){var d = f.deltaX; var e =
        - 1 * f.deltaY; if ("undefined" === typeof d || "undefined" === typeof e)d = - 1 * f.wheelDeltaX / 6, e = f.wheelDeltaY / 6; f.deltaMode && 1 === f.deltaMode && (d *= 10, e *= 10); d !== d && e !== e && (d = 0, e = f.wheelDelta); e = f.shiftKey?[ - e, - d]:[d, e]; d = e[0]; e = e[1]; if (!b(f.target, d, e)){var h = !1; a.settings.useBothWheelAxes?a.scrollbarYActive && !a.scrollbarXActive?(c.scrollTop = e?c.scrollTop - e * a.settings.wheelSpeed:c.scrollTop + d * a.settings.wheelSpeed, h = !0):a.scrollbarXActive && !a.scrollbarYActive && (c.scrollLeft = d?c.scrollLeft + d * a.settings.wheelSpeed:
        c.scrollLeft - e * a.settings.wheelSpeed, h = !0):(c.scrollTop -= e * a.settings.wheelSpeed, c.scrollLeft += d * a.settings.wheelSpeed); r(a); if (!h){h = 0 === c.scrollTop; var g = Math.floor(c.scrollTop) + c.offsetHeight === c.scrollHeight, k = 0 === c.scrollLeft, m = c.scrollLeft + c.offsetWidth === c.scrollWidth; h = (Math.abs(e) > Math.abs(d)?h || g:k || m)?!a.settings.wheelPropagation:!0}h && !f.ctrlKey && (f.stopPropagation(), f.preventDefault())}}var c = a.element; "undefined" !== typeof window.onwheel?a.event.bind(c, "wheel", d):"undefined" !== typeof window.onmousewheel &&
        a.event.bind(c, "mousewheel", d)}, touch:function(a){var b; function d(a){return a.pointerType && "pen" === a.pointerType && 0 === a.buttons?!1:a.targetTouches && 1 === a.targetTouches.length || a.pointerType && "mouse" !== a.pointerType && a.pointerType !== a.MSPOINTER_TYPE_MOUSE?!0:!1}function c(a){d(a) && (a = a.targetTouches?a.targetTouches[0]:a, m.pageX = a.pageX, m.pageY = a.pageY, n = (new Date).getTime(), null !== p && clearInterval(p))}function f(a, b, c){if (!h.contains(a))return!1; for (; a && a !== h; ){if (a.classList.contains(k.element.consuming))return!0;
        var d = getComputedStyle(a); if (c && d.overflowY.match(/(scroll|auto)/)){var f = a.scrollHeight - a.clientHeight; if (0 < f && (0 < a.scrollTop && 0 > c || a.scrollTop < f && 0 < c))return!0}if (b && d.overflowX.match(/(scroll|auto)/) && (d = a.scrollWidth - a.clientWidth, 0 < d && (0 < a.scrollLeft && 0 > b || a.scrollLeft < d && 0 < b)))return!0; a = a.parentNode}return!1}function e(c){if (d(c)){var e = c.targetTouches?c.targetTouches[0]:c, g = {pageX:e.pageX, pageY:e.pageY}; e = g.pageX - m.pageX; var k = g.pageY - m.pageY; if (!f(c.target, e, k)){h.scrollTop -= k; h.scrollLeft -=
        e; r(a); m = g; g = (new Date).getTime(); var l = g - n; 0 < l && (b = e / l, q = k / l, n = g); a:{g = Math.floor(h.scrollTop); l = h.scrollLeft; var p = Math.abs(e), t = Math.abs(k); if (t > p){if (0 > k && g === a.contentHeight - a.containerHeight || 0 < k && 0 === g){e = 0 === window.scrollY && 0 < k && R; break a}} else if (p > t && (0 > e && l === a.contentWidth - a.containerWidth || 0 < e && 0 === l)){e = !0; break a}e = !0}e && c.preventDefault()}}}function g(){a.settings.swipeEasing && (clearInterval(p), p = setInterval(function(){if (a.isInitialized)clearInterval(p); else if (b || q)if (.01 > Math.abs(b) &&
        .01 > Math.abs(q))clearInterval(p); else if (a.element){var c = 30 * b; h.scrollTop -= 30 * q; h.scrollLeft -= c; r(a); b *= .8; q *= .8} else clearInterval(p); else clearInterval(p)}, 10))}if (K || L){var h = a.element, m = {}, n = 0; var q = b = void 0; var p = null; K?(a.event.bind(h, "touchstart", c), a.event.bind(h, "touchmove", e), a.event.bind(h, "touchend", g)):L && (window.PointerEvent?(a.event.bind(h, "pointerdown", c), a.event.bind(h, "pointermove", e), a.event.bind(h, "pointerup", g)):window.MSPointerEvent && (a.event.bind(h, "MSPointerDown", c), a.event.bind(h,
        "MSPointerMove", e), a.event.bind(h, "MSPointerUp", g)))}}}; q = function(a, b){var d = this; void 0 === b && (b = {}); "string" === typeof a && (a = document.querySelector(a)); if (!a || !a.nodeName)throw Error("no element is specified to initialize PerfectScrollbar"); this.element = a; a.classList.add(k.main); this.settings = {handlers:["click-rail", "drag-thumb", "keyboard", "wheel", "touch"], maxScrollbarLength:null, minScrollbarLength:null, scrollingThreshold:1E3, scrollXMarginOffset:0, scrollYMarginOffset:0, suppressScrollX:!1, suppressScrollY:!1,
        swipeEasing:!0, useBothWheelAxes:!1, wheelPropagation:!0, wheelSpeed:1}; for (var c in b)this.settings[c] = b[c]; this.contentHeight = this.contentWidth = this.containerHeight = this.containerWidth = null; b = function(){return a.classList.add(k.state.focus)}; c = function(){return a.classList.remove(k.state.focus)}; this.isRtl = "rtl" === getComputedStyle(a).direction; !0 === this.isRtl && a.classList.add(k.rtl); this.negativeScrollAdjustment = (this.isNegativeScroll = function(){var b = a.scrollLeft; a.scrollLeft = - 1; var c = 0 > a.scrollLeft;
        a.scrollLeft = b; return c}())?a.scrollWidth - a.clientWidth:0; this.event = new u; this.ownerDocument = a.ownerDocument || document; this.scrollbarXRail = m(k.element.rail("x")); a.appendChild(this.scrollbarXRail); this.scrollbarX = m(k.element.thumb("x")); this.scrollbarXRail.appendChild(this.scrollbarX); this.scrollbarX.setAttribute("tabindex", 0); this.event.bind(this.scrollbarX, "focus", b); this.event.bind(this.scrollbarX, "blur", c); this.scrollbarXLeft = this.scrollbarXWidth = this.scrollbarXActive = null; var f = getComputedStyle(this.scrollbarXRail);
        this.scrollbarXBottom = parseInt(f.bottom, 10); isNaN(this.scrollbarXBottom)?(this.isScrollbarXUsingBottom = !1, this.scrollbarXTop = e(f.top)):this.isScrollbarXUsingBottom = !0; this.railBorderXWidth = e(f.borderLeftWidth) + e(f.borderRightWidth); g(this.scrollbarXRail, {display:"block"}); this.railXMarginWidth = e(f.marginLeft) + e(f.marginRight); g(this.scrollbarXRail, {display:""}); this.railXRatio = this.railXWidth = null; this.scrollbarYRail = m(k.element.rail("y")); a.appendChild(this.scrollbarYRail); this.scrollbarY = m(k.element.thumb("y"));
        this.scrollbarYRail.appendChild(this.scrollbarY); this.scrollbarY.setAttribute("tabindex", 0); this.event.bind(this.scrollbarY, "focus", b); this.event.bind(this.scrollbarY, "blur", c); this.scrollbarYTop = this.scrollbarYHeight = this.scrollbarYActive = null; b = getComputedStyle(this.scrollbarYRail); this.scrollbarYRight = parseInt(b.right, 10); isNaN(this.scrollbarYRight)?(this.isScrollbarYUsingRight = !1, this.scrollbarYLeft = e(b.left)):this.isScrollbarYUsingRight = !0; this.scrollbarYOuterWidth = this.isRtl?O(this.scrollbarY):
        null; this.railBorderYWidth = e(b.borderTopWidth) + e(b.borderBottomWidth); g(this.scrollbarYRail, {display:"block"}); this.railYMarginHeight = e(b.marginTop) + e(b.marginBottom); g(this.scrollbarYRail, {display:""}); this.railYRatio = this.railYHeight = null; this.reach = {x:0 >= a.scrollLeft?"start":a.scrollLeft >= this.contentWidth - this.containerWidth?"end":null, y:0 >= a.scrollTop?"start":a.scrollTop >= this.contentHeight - this.containerHeight?"end":null}; this.isAlive = !0; this.settings.handlers.forEach(function(a){return S[a](d)});
        this.lastScrollTop = Math.floor(a.scrollTop); this.lastScrollLeft = a.scrollLeft; this.event.bind(this.element, "scroll", function(a){return d.onScroll(a)}); r(this)}; q.prototype.update = function(){this.isAlive && (this.negativeScrollAdjustment = this.isNegativeScroll?this.element.scrollWidth - this.element.clientWidth:0, g(this.scrollbarXRail, {display:"block"}), g(this.scrollbarYRail, {display:"block"}), this.railXMarginWidth = e(getComputedStyle(this.scrollbarXRail).marginLeft) + e(getComputedStyle(this.scrollbarXRail).marginRight),
        this.railYMarginHeight = e(getComputedStyle(this.scrollbarYRail).marginTop) + e(getComputedStyle(this.scrollbarYRail).marginBottom), g(this.scrollbarXRail, {display:"none"}), g(this.scrollbarYRail, {display:"none"}), r(this), x(this, "top", 0, !1, !0), x(this, "left", 0, !1, !0), g(this.scrollbarXRail, {display:""}), g(this.scrollbarYRail, {display:""}))}; q.prototype.onScroll = function(a){this.isAlive && (r(this), x(this, "top", this.element.scrollTop - this.lastScrollTop), x(this, "left", this.element.scrollLeft - this.lastScrollLeft),
        this.lastScrollTop = Math.floor(this.element.scrollTop), this.lastScrollLeft = this.element.scrollLeft)}; q.prototype.destroy = function(){this.isAlive && (this.event.unbindAll(), t(this.scrollbarX), t(this.scrollbarY), t(this.scrollbarXRail), t(this.scrollbarYRail), this.removePsClasses(), this.scrollbarYRail = this.scrollbarXRail = this.scrollbarY = this.scrollbarX = this.element = null, this.isAlive = !1)}; q.prototype.removePsClasses = function(){this.element.className = this.element.className.split(" ").filter(function(a){return!a.match(/^ps([-_].+|)$/)}).join(" ")};
        return q});